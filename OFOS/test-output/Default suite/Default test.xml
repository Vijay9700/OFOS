<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="36" hostname="DESKTOP-14AU4L2" failures="1" tests="29" name="Default test" time="321.509" errors="0" timestamp="2023-08-05T12:31:05 IST">
  <testcase classname="OFOS.TC007_Order_Using_Cod" name="OrderUsingCod" time="11.179"/>
  <testcase classname="OFOS.TC003_Add_Dishes_FromHome" name="addDishes" time="6.429"/>
  <testcase classname="OFOS.TC006_Delete_Dish_FromCart" name="deleteDish" time="21.381"/>
  <testcase classname="OFOS.TC018_Order_Dish_From_HellResturant" name="orderDish" time="3.362"/>
  <testcase classname="OFOS.TC016_Order_Dish_From_SouthIndianResturant" name="orderDish" time="3.199"/>
  <testcase classname="OFOS.TC002_Verify_Login" name="verifyLogin" time="1.918"/>
  <testcase classname="OFOS.TC004_Add_Dishes_From_Restaurant" name="addDishes" time="4.33"/>
  <testcase classname="OFOS.TC002_Verify_Login" name="verifyLogin" time="1.829"/>
  <testcase classname="OFOS.TC013_Order_Dish_From_ContinentalResturant" name="OrderDish" time="1.555">
    <failure type="java.lang.AssertionError" message="expected [Dishes] but found [Home]">
      <![CDATA[java.lang.AssertionError: expected [Dishes] but found [Home]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at OFOS.TC013_Order_Dish_From_ContinentalResturant.OrderDish(TC013_Order_Dish_From_ContinentalResturant.java:28)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- OrderDish -->
  <testcase classname="OFOS.TC017_Order_Dish_From_NorthIndianResturant" name="orderDish" time="3.164"/>
  <testcase classname="OFOS.TC001_Verify_Register" name="verifyRegister" time="3.026"/>
  <testcase classname="OFOS.TC003_Add_Dishes_FromHome" name="addDishes" time="4.724"/>
  <testcase classname="OFOS.TC014_Order_Using_Paypal" name="OrderUsingPaypal" time="1.222"/>
  <testcase classname="OFOS.TC002_Verify_Login" name="verifyLogin" time="1.834"/>
  <testcase classname="OFOS.TC003_Add_Dishes_FromHome" name="addDishes" time="8.335"/>
  <testcase classname="OFOS.TC002_Verify_Login" name="verifyLogin" time="1.936"/>
  <testcase classname="OFOS.TC012_Order_Dish_From_AmericanResturant" name="orderDish" time="10.488"/>
  <testcase classname="OFOS.TC019_Order_Dish_From_HeavelnyFoodResturant" name="orderDish" time="3.303"/>
  <testcase classname="OFOS.TC002_Verify_Login" name="verifyLogin" time="2.011"/>
  <testcase classname="OFOS.TC005_Verify_Logout" name="logout" time="2.522"/>
  <testcase classname="OFOS.TC002_Verify_Login" name="verifyLogin" time="1.804"/>
  <testcase classname="OFOS.TC011_Order_Dish_From_ChinseResturant" name="OrderDish" time="8.875"/>
  <testcase classname="OFOS.TC007_Order_Using_Cod" name="OrderUsingCod" time="13.149"/>
  <testcase classname="OFOS.TC008_Cancel_Order" name="cancelOrder" time="6.171"/>
  <testcase classname="OFOS.TC015_Dispatch_Order" name="dispatch" time="13.145"/>
  <testcase classname="OFOS.TC002_Verify_Login" name="verifyLogin" time="1.993"/>
  <testcase classname="OFOS.TC010_Order_DishFrom_Italian" name="orderDish" time="8.629"/>
  <testcase classname="OFOS.TC002_Verify_Login" name="verifyLogin" time="1.782"/>
  <testcase classname="OFOS.TC009_Order_Dish_FromNorthStreetTavern" name="addDish" time="8.945"/>
  <testcase classname="generic.Base_Test" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="generic.Base_Test" name="@BeforeSuite beforeSuit" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuit -->
  <testcase classname="generic.Base_Test" name="@BeforeSuite beforeSuit" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuit -->
  <testcase classname="generic.Base_Test" name="@BeforeSuite beforeSuit" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuit -->
  <testcase classname="generic.Base_Test" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="generic.Base_Test" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="generic.Base_Test" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="generic.Base_Test" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="generic.Base_Test" name="@BeforeSuite beforeSuit" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuit -->
  <testcase classname="generic.Base_Test" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="generic.Base_Test" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="generic.Base_Test" name="@BeforeSuite beforeSuit" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuit -->
  <testcase classname="generic.Base_Test" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="generic.Base_Test" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="generic.Base_Test" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="generic.Base_Test" name="@BeforeSuite beforeSuit" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuit -->
  <testcase classname="generic.Base_Test" name="@BeforeSuite beforeSuit" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuit -->
  <testcase classname="generic.Base_Test" name="@BeforeSuite beforeSuit" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuit -->
  <testcase classname="generic.Base_Test" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="generic.Base_Test" name="@BeforeSuite beforeSuit" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuit -->
  <testcase classname="generic.Base_Test" name="@BeforeSuite beforeSuit" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuit -->
  <testcase classname="generic.Base_Test" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="generic.Base_Test" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="generic.Base_Test" name="@BeforeSuite beforeSuit" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuit -->
  <testcase classname="generic.Base_Test" name="@BeforeSuite beforeSuit" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuit -->
  <testcase classname="generic.Base_Test" name="@BeforeSuite beforeSuit" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuit -->
  <testcase classname="generic.Base_Test" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="generic.Base_Test" name="@BeforeSuite beforeSuit" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuit -->
  <testcase classname="generic.Base_Test" name="@BeforeSuite beforeSuit" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuit -->
  <testcase classname="generic.Base_Test" name="@BeforeSuite beforeSuit" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuit -->
  <testcase classname="generic.Base_Test" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="generic.Base_Test" name="@BeforeSuite beforeSuit" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuit -->
  <testcase classname="generic.Base_Test" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="generic.Base_Test" name="@BeforeSuite beforeSuit" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuit -->
  <testcase classname="generic.Base_Test" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="generic.Base_Test" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
</testsuite> <!-- Default test -->
